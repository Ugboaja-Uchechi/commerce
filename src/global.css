:root {
  --black: #0e0e0e;
  --theme: #fff;
  --gap: 1.5rem;
  --line-offset: calc(var(--gap) / 2);
  --line-thickness: .75px;
  --btn-size: calc(.7rem + .75vw);
  --main-text: calc(1rem + 1.25vw);
  --header-p: calc(.5rem + .75vw);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  line-height: 1.5;
}

a {
  text-decoration: none;
  color: var(--black);
}

.main-text {
  text-align: center;
  padding-block-start: 3.5rem;
  font-size: var(--main-text);
  font-weight: 500;
}

.grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fit,minmax(360px,1fr));
  /* Gives it an equal amount of row space even if we have a column with a higher amount of word or content */
  grid-auto-rows: minmax(min-content, 1fr);
  align-items: stretch;
  gap: var(--gap);
  overflow: hidden;
  padding: calc(1.5em * 1);
  width: 100%;
}

.link {
  text-decoration: none;
}

.grid-cover {
  position: relative;
  padding: 1rem;
  border: 1px solid var(--black);
}

/* .grid-cover::before,
.grid-cover::after {
  content: "";
  background-color: var(--black);
  position: absolute;
  z-index: 1;
}

.grid-cover::after {
  inline-size: 100vw;
  block-size: var(--line-thickness);
  inset-block-start: calc(var(--line-offset) * -1);
  inset-inline-start: 0;
}

.grid-cover::before {
  inline-size: var(--line-thickness);
  block-size: 100vh;
  inset-block-start: 0;
  inset-inline-start: calc(var(--line-offset) * -1);
} */

.grid-container img {
  width: 100%;
  /* height: 300px;
  min-height: 23rem; */
  height: 255px;
  min-height: 18rem;
  object-fit: cover;
}

.grid-cover p {
  font-size: var(--header-p);
  font-weight: 500;
}

.product-relative {
  position: relative;
}

.product-like {
  position: absolute;
  inset-block-start: 0;
  inset-inline-end: 0;
}

.product-info {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@media screen and (max-width: 400px) {
  .grid-container {
    grid-template-columns: repeat(auto-fit,minmax(325px,1fr));
  }
}